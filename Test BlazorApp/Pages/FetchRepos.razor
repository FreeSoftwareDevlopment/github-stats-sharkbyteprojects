@page "/repos"
@inject HttpClient Http
@code {
    bool stateof = false;
    void toggleid()
    {
        stateof = !stateof;
    }
}
<h1>Latest Repositories</h1>

<p>Here are the latest GitHub Repositories created by Sharkbyteprojects</p>

@if (repositorielist == null)
{
    <p><em>Here must be something! Loading...</em></p>
}
else
{
    <button type="button" class="btn btn-primary" @onclick="toggleid">@(stateof?"Hide":"Show") additional Information</button>
    <table class="table" style="overflow: auto; max-width: 100vw;">
        <thead>
            <tr>
                <th>Reposname</th>
                <th>Description</th>
                @if (stateof)
                {
                    <th>Programming Language</th>
                    <th>Dates</th>
                    <th>Is a Fork?</th>
                }
                <th>Link</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var repos in repositorielist)
            {
            <tr>
                <td>@repos.name</td>
                <td><textarea readonly="readonly" class="form-control" style="resize: none; max-width: 200px; max-height: 200px;">@repos.description</textarea></td>
                @if (stateof)
                {
                    <td>@repos.language</td>
                    <td>
                        Created: @repos.created_at.ToShortDateString() @repos.created_at.ToShortTimeString()<br />
                        Updated: @repos.updated_at.ToShortDateString() @repos.updated_at.ToShortTimeString()<br />
                        Pushed: @repos.pushed_at.ToShortDateString() @repos.pushed_at.ToShortTimeString()
                    </td>
                    <td>
                        @(repos.fork?"Yes":"No")
                    </td>
                }
                <td><a href="@repos.html_url" target="_blank" class="ml-md-auto">Open GitHub Page</a></td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private repos[] repositorielist;

    protected override async Task OnInitializedAsync()
    {
        repositorielist = await Http.GetFromJsonAsync<repos[]>("https://api.github.com/users/sharkbyteprojects/repos?sort=latest&per_page=20");
    }

    public class repos
    {
        public string name { get; set; }

        public string language { get; set; }

        public string html_url { get; set; }

        public DateTime created_at { get; set; }

        public DateTime pushed_at { get; set; }

        public DateTime updated_at { get; set; }

        public string description { get; set; }

        public bool fork { get; set; }
    }
}
